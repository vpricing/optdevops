AWSTemplateFormatVersion: 2010-09-09
Description: Volaris Optimization - DevOps - Network
  Deploy of VPCs, Transit GW, Nat GW, Internet Gateway
  Main Network Resources Navitare Public & Private Connection and Optimization Pricing VPC
Parameters: 
  Environment:
    Type: String
    Default: 'dev'
  NavitaireCIDR:
    Type: String
    Default: '149.122.0.0/16'
  TGRegion:
    Type: String
    Default: us-east-1
  TGatewayId:
    Type: String
    Default: tgw-0589919ced47cddf3
  TGAccountId:
    Type: String
    Default: '108160666657'
  NavPrivCIDR:
    Type: String
    Default: '10.111.0.0/16'
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  NavPubCIDR:
    Type: String
    Default: '10.112.0.0/16'
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  ProjectCIDR:
    Type: String
    Default: '10.106.0.0/16'
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  EIPAllocationID:
    Type: String
    Default: 'eipalloc-0060a03cc1750e32b'
  TransitGateway:
    Type: String
    Default: 'False'
Conditions:
  CreateEIPNatGW: !Equals
    - !Ref EIPAllocationID
    - ''
  CreateTGW: !Equals
    - !Ref TransitGateway
    - 'True'

Resources: 
  NavitairePrivateVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref NavPrivCIDR
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags: 
        - Key: "Name"
          Value: "VolPrcNavPrv-vpc"
  NavitairePrivateRT:
    Type: AWS::EC2::RouteTable
    DependsOn: NavitairePrivateVPC
    Properties:
      VpcId: !Ref NavitairePrivateVPC
      Tags:
        - Key: Name
          Value: "VolPrcNavPrv-rt"
        - Key: Env
          Value: !Ref Environment
  NPODSConSubNet1:
    Type: AWS::EC2::Subnet
    DependsOn: NavitairePrivateVPC
    Properties:
      VpcId:
        Ref: NavitairePrivateVPC
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt NavitairePrivateVPC.CidrBlock, 6, 8]]
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "NavDotRezSubN1"
        - Key: Env
          Value: !Ref Environment
  NPODSConSubNet2:
    Type: AWS::EC2::Subnet
    DependsOn: NavitairePrivateVPC
    Properties:
      VpcId:
        Ref: NavitairePrivateVPC
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt NavitairePrivateVPC.CidrBlock, 6, 8]]
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "NavDotRezSubN2"
        - Key: Env
          Value: !Ref Environment
  NPODSConSubNet3:
    Type: AWS::EC2::Subnet
    DependsOn: NavitairePrivateVPC
    Properties:
      VpcId:
        Ref: NavitairePrivateVPC
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt NavitairePrivateVPC.CidrBlock, 6, 8]]
      AvailabilityZone: !Select [2, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "NavDotRezSubN3"
        - Key: Env
          Value: !Ref Environment
  NPNewSkiesSubNet1:
    Type: AWS::EC2::Subnet
    DependsOn: NavitairePrivateVPC
    Properties:
      VpcId:
        Ref: NavitairePrivateVPC
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt NavitairePrivateVPC.CidrBlock, 6, 8]]
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "NewSkiesSubN1"
        - Key: Env
          Value: !Ref Environment
  NPNewSkiesSubNet2:
    Type: AWS::EC2::Subnet
    DependsOn: NavitairePrivateVPC
    Properties:
      VpcId:
        Ref: NavitairePrivateVPC
      CidrBlock: !Select [ 4, !Cidr [ !GetAtt NavitairePrivateVPC.CidrBlock, 6, 8]]
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "NewSkiesSubN2"
        - Key: Env
          Value: !Ref Environment
  NPNewSkiesSubNet3:
    Type: AWS::EC2::Subnet
    DependsOn: NavitairePrivateVPC
    Properties:
      VpcId:
        Ref: NavitairePrivateVPC
      CidrBlock: !Select [ 5, !Cidr [ !GetAtt NavitairePrivateVPC.CidrBlock, 6, 8]]
      AvailabilityZone: !Select [2, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "NewSkiesSubN3"
        - Key: Env
          Value: !Ref Environment
  NPODSConSubNet1RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: NPODSConSubNet1
      RouteTableId:
        Ref: NavitairePrivateRT
  NPODSConSubNet2RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: NPODSConSubNet2
      RouteTableId:
        Ref: NavitairePrivateRT
  NPODSConSubNet3RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: NPODSConSubNet3
      RouteTableId:
        Ref: NavitairePrivateRT
  NPNewSkiesSubNet1RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: NPNewSkiesSubNet1
      RouteTableId:
        Ref: NavitairePrivateRT
  NPNewSkiesSubNet2RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: NPNewSkiesSubNet2
      RouteTableId:
        Ref: NavitairePrivateRT
  NPNewSkiesSubNet3RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: NPNewSkiesSubNet3
      RouteTableId:
        Ref: NavitairePrivateRT
  NavitairePrivateTGW:
    Type: AWS::EC2::TransitGateway
    Condition: CreateTGW
    Properties:
      AmazonSideAsn: 65000
      Description: "TGW Dev Integration"
      AutoAcceptSharedAttachments: "disable"
      DefaultRouteTableAssociation: "enable"
      DnsSupport: "enable"
      VpnEcmpSupport: "enable"
      Tags:
        - Key: Env
          Value: !Ref Environment
        - Key: Name
          Value: !Sub 'VolITNetwork-${Environment}-tgw'
  NPTGWPeerAttach:
    Type: AWS::EC2::TransitGatewayPeeringAttachment
    Condition: CreateTGW
    Properties: 
      PeerAccountId: !Ref TGAccountId
      PeerRegion: !Ref TGRegion
      PeerTransitGatewayId: !Ref TGatewayId
      TransitGatewayId: !Ref NavitairePrivateTGW
      Tags: 
        - Key: Env
          Value: !Ref Environment
        - Key: Name
          Value: !Sub 'VolITNav-${Environment}-tgwa'
  NPTGWVPCAttach:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref NPODSConSubNet1
        - !Ref NPODSConSubNet2
        - !Ref NPNewSkiesSubNet3
      Tags: 
        - Key: Env
          Value: !Ref Environment
        - Key: Name
          Value: !Sub 'VolPrcNavPriv-${Environment}-vpc'
      TransitGatewayId: !If
        - CreateTGW
        - !Ref NavitairePrivateTGW
        - !Ref TGatewayId
      VpcId: !Ref NavitairePrivateVPC
  NPS3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    DependsOn: NavitairePrivateRT
    Properties:
      RouteTableIds: 
        - !Ref NavitairePrivateRT
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcEndpointType: Gateway
      VpcId: !Ref NavitairePrivateVPC
  NPTGWRoute:
    Type: AWS::EC2::Route
    DependsOn: NPTGWVPCAttach
    Properties:
       RouteTableId:
         Ref: NavitairePrivateRT
       DestinationCidrBlock: !Ref NavitaireCIDR
       TransitGatewayId: !If
        - CreateTGW
        - !Ref NavitairePrivateTGW
        - !Ref TGatewayId

  NavitairePublicVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref NavPubCIDR
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags: 
        - Key: "Name"
          Value: "VolPrcNavPub-vpc"
  NPubDotRezSubNet1:
    Type: AWS::EC2::Subnet
    DependsOn: NavitairePublicVPC
    Properties:
      VpcId:
        Ref: NavitairePublicVPC
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt NavitairePublicVPC.CidrBlock, 6, 8]]
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "NavDotRezSubN1"
        - Key: Env
          Value: !Ref Environment
  NPubDotRezSubNet2:
    Type: AWS::EC2::Subnet
    DependsOn: NavitairePublicVPC
    Properties:
      VpcId:
        Ref: NavitairePublicVPC
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt NavitairePublicVPC.CidrBlock, 6, 8]]
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "NavDotRezSubN2"
        - Key: Env
          Value: !Ref Environment
  NPubDotRezSubNet3:
    Type: AWS::EC2::Subnet
    DependsOn: NavitairePublicVPC
    Properties:
      VpcId:
        Ref: NavitairePublicVPC
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt NavitairePublicVPC.CidrBlock, 6, 8]]
      AvailabilityZone: !Select [2, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "NavDotRezSubN3"
        - Key: Env
          Value: !Ref Environment
  NavPubRT:
    Type: AWS::EC2::RouteTable
    DependsOn: NavitairePublicVPC
    Properties:
      VpcId: !Ref NavitairePublicVPC
      Tags:
        - Key: Name
          Value: "VolPrcNavPub-rt"
        - Key: Env
          Value: !Ref Environment
  NPubS3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    DependsOn: NavPubRT
    Properties:
      RouteTableIds: 
        - !Ref NavPubRT
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcEndpointType: Gateway
      VpcId: !Ref NavitairePublicVPC
  PrcNavPubPeerCon:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      PeerVpcId: !Ref ProjectVPC
      VpcId: !Ref NavitairePublicVPC
      Tags: 
        - Key: "Name"
          Value: "VolPricingNavPub-pcx"
  NPrvPeerConRT:
    Type: AWS::EC2::Route
    DependsOn: PrcNavPubPeerCon
    Properties:
       RouteTableId:
         Ref: NavPubRT
       DestinationCidrBlock: "0.0.0.0/16"
       VpcPeeringConnectionId:
         Ref: PrcNavPubPeerCon
  PrcNPrvReturnRoute:
    Type: AWS::EC2::Route
    DependsOn: PrcNavPubPeerCon
    Properties:
       RouteTableId:
         Ref: PrcPubRT
       DestinationCidrBlock: !GetAtt NavitairePublicVPC.CidrBlock
       VpcPeeringConnectionId: !Ref PrcNavPubPeerCon
  ProjectVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref ProjectCIDR
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags: 
        - Key: "Name"
          Value: "VolPricing-vpc"
  PricingInternetGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: "VolPricing-igw"
  PricingIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref PricingInternetGW
      VpcId: !Ref ProjectVPC
  PrcPubRT:
    Type: AWS::EC2::RouteTable
    DependsOn: ProjectVPC
    Properties:
      VpcId: !Ref ProjectVPC
      Tags:
        - Key: Name
          Value: "VolPrcPub-rt"
        - Key: Env
          Value: !Ref Environment
  PrcInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: PricingIGWAttachment
    Properties:
       RouteTableId:
         Ref: PrcPubRT
       DestinationCidrBlock: "0.0.0.0/16"
       GatewayId: !Ref PricingInternetGW
  PrcElasticIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPNatGW
    Properties:
      Tags: 
        - Key: Name
          Value: "VolPrcIPNatGW-eip"
  PrcPrvRT:
    Type: AWS::EC2::RouteTable
    DependsOn: ProjectVPC
    Properties:
      VpcId: !Ref ProjectVPC
      Tags:
        - Key: Name
          Value: "VolPrcPrv-rt"
        - Key: Env
          Value: !Ref Environment
  PrcPublicSubNet1:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcPublicSub1"
        - Key: Env
          Value: !Ref Environment
  PrcNatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: 
        !If 
          - CreateEIPNatGW
          - !GetAtt PrcElasticIP.AllocationId
          - !Ref EIPAllocationID
      SubnetId: !Ref PrcPublicSubNet1
  PrcPublicSubNet1RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcPublicSubNet1
      RouteTableId:
        Ref: PrcPubRT
  
  PrcPublicSubNet2:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcPublicSub2"
        - Key: Env
          Value: !Ref Environment
  PrcPublicSubNet2RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcPublicSubNet2
      RouteTableId:
        Ref: PrcPubRT
  PrcPublicSubNet3:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [2, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcPublicSub3"
        - Key: Env
          Value: !Ref Environment
  PrcPublicSubNet3RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcPublicSubNet3
      RouteTableId:
        Ref: PrcPubRT
  PrcDataWarehouseSubNet1:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcDataWarehouseSub1"
        - Key: Env
          Value: !Ref Environment
  PrcDataWarehouseSubNet1RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcDataWarehouseSubNet1
      RouteTableId:
        Ref: PrcPubRT
  PrcDataWarehouseSubNet2:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 4, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcDataWarehouseSub2"
        - Key: Env
          Value: !Ref Environment
  PrcDataWarehouseSubNet2RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcDataWarehouseSubNet2
      RouteTableId:
        Ref: PrcPubRT
  PrcDataWarehouseSubNet3:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 5, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [2, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcDataWarehouseSub3"
        - Key: Env
          Value: !Ref Environment
  PrcDataWarehouseSubNet3RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcDataWarehouseSubNet3
      RouteTableId:
        Ref: PrcPubRT
  PrcDatabaseSubNet1:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 6, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcDatabaseSub1"
        - Key: Env
          Value: !Ref Environment
  PrcDatabaseSubNet1RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcDatabaseSubNet1
      RouteTableId:
        Ref: PrcPubRT
  PrcDatabaseSubNet2:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 7, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcDatabaseSub2"
        - Key: Env
          Value: !Ref Environment
  PrcDatabaseSubNet2RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcDatabaseSubNet2
      RouteTableId:
        Ref: PrcPubRT
  PrcDatabaseSubNet3:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 8, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [2, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcDatabaseSub3"
        - Key: Env
          Value: !Ref Environment
  PrcDatabaseSubNet3RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcDatabaseSubNet3
      RouteTableId:
        Ref: PrcPubRT
  PrcDataWorkerSubNet1:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 9, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcDataWorkerSub1"
        - Key: Env
          Value: !Ref Environment
  PrcDataWorkerSubNet1RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcDataWorkerSubNet1
      RouteTableId:
        Ref: PrcPrvRT
  PrcDataWorkerSubNet2:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 10, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcDataWorkerSub2"
        - Key: Env
          Value: !Ref Environment
  PrcDataWorkerSubNet2RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcDataWorkerSubNet2
      RouteTableId:
        Ref: PrcPrvRT
  PrcDataWorkerSubNet3:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 11, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [2, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcDataWorkerSub3"
        - Key: Env
          Value: !Ref Environment
  PrcDataWorkerSubNet3RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcDataWorkerSubNet3
      RouteTableId:
        Ref: PrcPrvRT
  PrcSageMakerSubNet1:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 12, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcSageMakerSub1"
        - Key: Env
          Value: !Ref Environment
  PrcSageMakerSubNet1RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcSageMakerSubNet1
      RouteTableId:
        Ref: PrcPrvRT
  PrcSageMakerSubNet2:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 13, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcSageMakerSub2"
        - Key: Env
          Value: !Ref Environment
  PrcSageMakerSubNet2RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcSageMakerSubNet2
      RouteTableId:
        Ref: PrcPrvRT
  PrcSageMakerSubNet3:
    Type: AWS::EC2::Subnet
    DependsOn: ProjectVPC
    Properties:
      VpcId:
        Ref: ProjectVPC
      CidrBlock: !Select [ 14, !Cidr [ !GetAtt ProjectVPC.CidrBlock, 15, 8]]
      AvailabilityZone: !Select [2, Fn::GetAZs: !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: "PrcSageMakerSub3"
        - Key: Env
          Value: !Ref Environment
  PrcSageMakerSubNet3RTAss:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrcSageMakerSubNet3
      RouteTableId:
        Ref: PrcPrvRT
  PrcPrvInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: PrcNatGateway
    Properties:
       RouteTableId:
         Ref: PrcPrvRT
       DestinationCidrBlock: "0.0.0.0/16"
       NatGatewayId: !Ref PrcNatGateway 
 
